definitions:
  dto.CreateCommentRequest:
    properties:
      message:
        example: message 1
        type: string
      photo_id:
        example: 1
        type: integer
    type: object
  dto.CreateCommentResponse:
    properties:
      created_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      id:
        example: 1
        type: integer
      message:
        example: message 1
        type: string
      photo_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  dto.CreatePhotoRequest:
    properties:
      caption:
        example: gunung yang ada di indonesia
        type: string
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
    type: object
  dto.CreateSMediaRequest:
    properties:
      name:
        example: twitter
        type: string
      social_media_url:
        example: twitter.com
        type: string
    type: object
  dto.CreateSMediaResponse:
    properties:
      created_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: twitter
        type: string
      social_media_url:
        example: twitter.com
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  dto.CreatedPhotoResponse:
    properties:
      caption:
        example: gunung yang ada di indonesia
        type: string
      created_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  dto.DeleteResponse:
    properties:
      message:
        example: Your <item> has been successfully deleted
        type: string
    type: object
  dto.EditCommentRequest:
    properties:
      message:
        example: message 1
        type: string
    type: object
  dto.EditCommentResponse:
    properties:
      caption:
        example: gunung yang ada di indonesia
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
      updated_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  dto.EditPhotoRequest:
    properties:
      caption:
        example: gunung yang ada di indonesia
        type: string
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
    type: object
  dto.EditPhotoResponse:
    properties:
      caption:
        example: gunung yang ada di indonesia
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
      updated_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  dto.EditSMediaRequest:
    properties:
      name:
        example: twitter
        type: string
      social_media_url:
        example: twitter.com
        type: string
    type: object
  dto.EditSMediaResponse:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: twitter
        type: string
      social_media_url:
        example: twitter.com
        type: string
      updated_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  dto.GetCommentResponse:
    properties:
      Photo:
        $ref: '#/definitions/dto.PhotoComment'
      User:
        $ref: '#/definitions/dto.UserComment'
      created_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      id:
        example: 1
        type: integer
      message:
        example: message 1
        type: string
      photo_id:
        example: 1
        type: integer
      updated_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  dto.GetPhotoResponse:
    properties:
      User:
        $ref: '#/definitions/dto.GetPhotoUser'
      caption:
        example: gunung yang ada di indonesia
        type: string
      created_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
      updated_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  dto.GetPhotoUser:
    properties:
      email:
        example: email@email.com
        type: string
      username:
        example: username1
        type: string
    type: object
  dto.GetSMediaResponse:
    properties:
      social_medias:
        items:
          $ref: '#/definitions/dto.SMediaList'
        type: array
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.PhotoComment:
    properties:
      caption:
        example: gunung yang ada di indonesia
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: google.com
        type: string
      title:
        example: pegunungan
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  dto.RegisterRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.RegisterResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  dto.SMediaList:
    properties:
      User:
        $ref: '#/definitions/dto.SMediaUser'
      created_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: twitter
        type: string
      social_media_url:
        example: twitter.com
        type: string
      updated_at:
        example: "2022-10-17T13:44:00.294125+07:00"
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  dto.SMediaUser:
    properties:
      id:
        example: 1
        type: integer
      username:
        example: username1
        type: string
    type: object
  dto.UserComment:
    properties:
      email:
        example: email@email.com
        type: string
      id:
        example: 1
        type: integer
      username:
        example: username1
        type: string
    type: object
  dto.UserEditRequest:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  dto.UserEditResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /comments:
    get:
      description: Get all data comment
      operationId: Get-all-comment
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GetCommentResponse'
            type: array
      tags:
      - comment
    post:
      consumes:
      - application/json
      description: Add data comment
      operationId: Add-comment
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCommentRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateCommentResponse'
      tags:
      - comment
  /comments/{commentId}:
    delete:
      description: Delete data comment
      operationId: Delete-comment
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment's id
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteResponse'
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: Update data comment
      operationId: Update-comment
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.EditCommentRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment's id
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EditCommentResponse'
      tags:
      - comment
  /photos:
    get:
      description: Get all data photo
      operationId: Get-all-photo
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GetPhotoResponse'
            type: array
      tags:
      - photo
    post:
      consumes:
      - application/json
      description: Add data photo
      operationId: Add-photo
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePhotoRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreatedPhotoResponse'
      tags:
      - photo
  /photos/{photoId}:
    delete:
      description: Delete data photo
      operationId: Delete-photo
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: photo's id
        in: path
        name: photoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteResponse'
      tags:
      - photo
    put:
      consumes:
      - application/json
      description: Update data photo
      operationId: Update-photo
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.EditPhotoRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: photo's id
        in: path
        name: photoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EditPhotoResponse'
      tags:
      - photo
  /socialmedias:
    get:
      description: get all data social media
      operationId: Get-all-social-media
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetSMediaResponse'
      tags:
      - socialmedia
    post:
      consumes:
      - application/json
      description: Add data social media
      operationId: Add-social-media
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSMediaRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateSMediaResponse'
      tags:
      - socialmedia
  /socialmedias/{socialMediaId}:
    delete:
      description: Delete data social media
      operationId: Delete-social-media
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: social media's id
        in: path
        name: socialMediaId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteResponse'
      tags:
      - socialmedia
    put:
      consumes:
      - application/json
      description: Update data social media
      operationId: Update-social-media
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.EditSMediaRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: social media's id
        in: path
        name: socialMediaId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EditSMediaResponse'
      tags:
      - socialmedia
  /users/:
    delete:
      description: Delete data user
      operationId: Delete-user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteResponse'
      tags:
      - user
  /users/{userId}:
    put:
      consumes:
      - application/json
      description: Update data user
      operationId: Update-user
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.UserEditRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: user's id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserEditResponse'
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: Login to mygram
      operationId: login-user
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      tags:
      - auth
  /users/register:
    post:
      consumes:
      - application/json
      description: Register to mygram
      operationId: register-user
      parameters:
      - description: request body json
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
      tags:
      - auth
swagger: "2.0"
